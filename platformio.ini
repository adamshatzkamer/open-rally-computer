; Open Rally Computer - Universal PlatformIO Configuration
; Supports both M5Stack Core and M5Stack Tough

[env:m5stack-core]
platform = espressif32
board = m5stack-core-esp32
framework = arduino

lib_deps =
    m5stack/M5Stack @ ^0.4.6
    mikalhart/TinyGPSPlus @ ^1.0.2

monitor_speed = 115200

build_flags =
    -D CORE_DEBUG_LEVEL=4
    -D M5STACK_CORE

upload_speed = 921600

[env:m5stack-tough]
platform = espressif32
board = m5stack-core-esp32  ; Use core-esp32 as base, Tough uses same ESP32
framework = arduino

lib_deps =
    m5stack/M5Stack @ ^0.4.6
    mikalhart/TinyGPSPlus @ ^1.0.2

monitor_speed = 115200

build_flags =
    -D CORE_DEBUG_LEVEL=4
    -D M5STACK_TOUGH

upload_speed = 921600

[env:m5stack-tough-external]
platform = espressif32
board = m5stack-core-esp32
framework = arduino

lib_deps =
    m5stack/M5Stack @ ^0.4.6
    mikalhart/TinyGPSPlus @ ^1.0.2

monitor_speed = 115200

build_flags =
    -D CORE_DEBUG_LEVEL=4
    -D M5STACK_TOUGH
    -D USE_EXTERNAL_BUTTONS

upload_speed = 921600

[env:m5stack-blitz-buttons]
platform = espressif32
board = m5stack-core-esp32
framework = arduino

lib_deps =
    m5stack/M5Stack @ ^0.4.6
    mikalhart/TinyGPSPlus @ ^1.0.2

monitor_speed = 115200

build_flags =
    -D CORE_DEBUG_LEVEL=4
    -D BLITZ_BUTTONS

upload_speed = 921600

[env:m5stack-blitz-buttons-wired]
platform = espressif32
board = m5stack-core-esp32
framework = arduino

lib_deps =
    m5stack/M5Stack @ ^0.4.6
    mikalhart/TinyGPSPlus @ ^1.0.2

monitor_speed = 115200

build_flags =
    -D CORE_DEBUG_LEVEL=4
    -D BLITZ_BUTTONS_WIRED

upload_speed = 921600

; Upload port will be auto-detected on macOS
; Common macOS serial ports: /dev/cu.usbserial-* or /dev/tty.usbserial-*
; Uncomment and modify the line below if auto-detection doesn't work:
; upload_port = /dev/cu.usbserial-0001